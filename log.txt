 graph=Graph { nodes: [Node { candidates: [Candidate { initial_result: Ambig, children: [(B, true, ForcedAmbiguity), (C, true, ForcedAmbiguity), (A, false, Coinductive)] }] }, Node { candidates: [Candidate { initial_result: Yes, children: [(A, false, Unknown), (C, true, ForcedAmbiguity), (D, false, Coinductive)] }] }, Node { candidates: [Candidate { initial_result: Yes, children: [(D, false, Coinductive), (A, false, Inductive)] }, Candidate { initial_result: Ambig, children: [] }, Candidate { initial_result: Yes, children: [(C, false, Coinductive), (D, false, Coinductive), (C, false, Coinductive)] }] }, Node { candidates: [Candidate { initial_result: Yes, children: [(C, false, Inductive), (B, false, Inductive)] }, Candidate { initial_result: Yes, children: [(D, true, ForcedAmbiguity)] }, Candidate { initial_result: Yes, children: [(A, false, Unknown), (B, true, ForcedAmbiguity)] }] }] }
 evaluate_goal input=A, step_kind_from_parent=Inductive
   evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
     evaluate_goal input=A, step_kind_from_parent=Unknown
       encountered cycle with depth 0, path_kind=ForcedAmbiguity
       return=(Some(2), Ambig)
     evaluate_goal input=C, step_kind_from_parent=ForcedAmbiguity
       candidate i=0
         evaluate_goal input=D, step_kind_from_parent=Coinductive
           candidate i=0
             evaluate_goal input=C, step_kind_from_parent=Inductive
               encountered cycle with depth 2, path_kind=Coinductive
               return=(Some(5), Yes)
             evaluate_goal input=B, step_kind_from_parent=Inductive
               encountered cycle with depth 1, path_kind=ForcedAmbiguity
               return=(Some(6), Ambig)
             initial_result=Yes, result=Ambig
           candidate i=1
             evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
               encountered cycle with depth 3, path_kind=ForcedAmbiguity
               return=(Some(7), Ambig)
             flip child result, result=Ambig
             initial_result=Yes, result=Ambig
           candidate i=2
             evaluate_goal input=A, step_kind_from_parent=Unknown
               encountered cycle with depth 0, path_kind=ForcedAmbiguity
               return=(Some(8), Ambig)
             evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
               encountered cycle with depth 1, path_kind=ForcedAmbiguity
               return=(Some(9), Ambig)
             flip child result, result=Ambig
             initial_result=Yes, result=Ambig
           provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 4, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY), 2: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
           return=(Some(4), Ambig)
         evaluate_goal input=A, step_kind_from_parent=Inductive
           encountered cycle with depth 0, path_kind=ForcedAmbiguity
           return=(Some(10), Ambig)
         initial_result=Yes, result=Ambig
       candidate i=1
         initial_result=Ambig, result=Ambig
       candidate i=2
         evaluate_goal input=C, step_kind_from_parent=Coinductive
           encountered cycle with depth 2, path_kind=Coinductive
           return=(Some(11), Yes)
         evaluate_goal input=D, step_kind_from_parent=Coinductive
           provisional cache hit, head=2, path_from_head=Coinductive
           return=(Some(12), Ambig)
         evaluate_goal input=C, step_kind_from_parent=Coinductive
           encountered cycle with depth 2, path_kind=Coinductive
           return=(Some(13), Yes)
         initial_result=Yes, result=Ambig
       changed provisional results, i=1, result=Ambig
       reevaluate cycle rev_stack=[(5, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (4, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) })], provisional_result=Ambig
         reevaluate_canonical_goal input=C, step_kind_from_parent=Inductive
           evaluate_goal input=C, step_kind_from_parent=Inductive
             encountered cycle with depth 2, path_kind=Coinductive
             return=(Some(14), Ambig)
           goal did change, input=C, result=Ambig
         reevaluate_canonical_goal input=D, step_kind_from_parent=Coinductive
           evaluate_goal input=D, step_kind_from_parent=Coinductive
             candidate i=0
               evaluate_goal input=C, step_kind_from_parent=Inductive
                 encountered cycle with depth 2, path_kind=Coinductive
                 return=(Some(16), Ambig)
               evaluate_goal input=B, step_kind_from_parent=Inductive
                 encountered cycle with depth 1, path_kind=ForcedAmbiguity
                 return=(Some(17), Ambig)
               initial_result=Yes, result=Ambig
             candidate i=1
               evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
                 encountered cycle with depth 3, path_kind=ForcedAmbiguity
                 return=(Some(18), Ambig)
               flip child result, result=Ambig
               initial_result=Yes, result=Ambig
             candidate i=2
               evaluate_goal input=A, step_kind_from_parent=Unknown
                 encountered cycle with depth 0, path_kind=ForcedAmbiguity
                 return=(Some(19), Ambig)
               evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
                 encountered cycle with depth 1, path_kind=ForcedAmbiguity
                 return=(Some(20), Ambig)
               flip child result, result=Ambig
               initial_result=Yes, result=Ambig
             provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 15, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY), 2: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
             return=(Some(15), Ambig)
           goal did not change, input=D, result=Ambig
       reevaluate cycle rev_stack=[(11, GoalInfo { input: C, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) })], provisional_result=Ambig
         reevaluate_canonical_goal input=C, step_kind_from_parent=Coinductive
           evaluate_goal input=C, step_kind_from_parent=Coinductive
             encountered cycle with depth 2, path_kind=Coinductive
             return=(Some(21), Ambig)
           goal did change, input=C, result=Ambig
         reevaluating goal itself
         candidate i=0
           evaluate_goal input=D, step_kind_from_parent=Coinductive
             provisional cache hit, head=2, path_from_head=Coinductive
             return=(Some(22), Ambig)
           evaluate_goal input=A, step_kind_from_parent=Inductive
             encountered cycle with depth 0, path_kind=ForcedAmbiguity
             return=(Some(23), Ambig)
           initial_result=Yes, result=Ambig
         candidate i=1
           initial_result=Ambig, result=Ambig
         candidate i=2
           evaluate_goal input=C, step_kind_from_parent=Coinductive
             encountered cycle with depth 2, path_kind=Coinductive
             return=(Some(24), Ambig)
           evaluate_goal input=D, step_kind_from_parent=Coinductive
             provisional cache hit, head=2, path_from_head=Coinductive
             return=(Some(25), Ambig)
           evaluate_goal input=C, step_kind_from_parent=Coinductive
             encountered cycle with depth 2, path_kind=Coinductive
             return=(Some(26), Ambig)
           initial_result=Yes, result=Ambig
       rebased entry, input=D, entry=ProvisionalCacheEntry { entry_node_id: 15, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN | COINDUCTIVE), 1: PathsToNested(INDUCTIVE | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       return=(Some(3), Ambig)
     flip child result, result=Ambig
     evaluate_goal input=D, step_kind_from_parent=Coinductive
       candidate i=0
         evaluate_goal input=C, step_kind_from_parent=Inductive
           candidate i=0
             evaluate_goal input=D, step_kind_from_parent=Coinductive
               encountered cycle with depth 2, path_kind=Coinductive
               return=(Some(29), Yes)
             evaluate_goal input=A, step_kind_from_parent=Inductive
               encountered cycle with depth 0, path_kind=ForcedAmbiguity
               return=(Some(30), Ambig)
             initial_result=Yes, result=Ambig
           candidate i=1
             initial_result=Ambig, result=Ambig
           candidate i=2
             evaluate_goal input=C, step_kind_from_parent=Coinductive
               encountered cycle with depth 3, path_kind=Coinductive
               return=(Some(31), Yes)
             evaluate_goal input=D, step_kind_from_parent=Coinductive
               encountered cycle with depth 2, path_kind=Coinductive
               return=(Some(32), Yes)
             evaluate_goal input=C, step_kind_from_parent=Coinductive
               encountered cycle with depth 3, path_kind=Coinductive
               return=(Some(33), Yes)
             initial_result=Yes, result=Yes
           provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 28, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Yes }
           return=(Some(28), Yes)
         evaluate_goal input=B, step_kind_from_parent=Inductive
           encountered cycle with depth 1, path_kind=Coinductive
           return=(Some(34), Yes)
         initial_result=Yes, result=Yes
       candidate i=1
         evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
           provisional cache hit, head=1, path_from_head=ForcedAmbiguity
           return=(Some(35), Ambig)
         flip child result, result=Ambig
         initial_result=Yes, result=Ambig
       candidate i=2
         evaluate_goal input=A, step_kind_from_parent=Unknown
             4ms encountered cycle with depth 0, path_kind=ForcedAmbiguity
             4ms return=(Some(36), Ambig)
         evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
           encountered cycle with depth 1, path_kind=ForcedAmbiguity
           return=(Some(37), Ambig)
           4ms flip child result, result=Ambig
           4ms initial_result=Yes, result=Ambig
         4ms rebased entry, input=C, entry=ProvisionalCacheEntry { entry_node_id: 28, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE | FORCED_AMBIGUITY), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Yes }
         4ms provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 27, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN | FORCED_AMBIGUITY), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Yes }
         4ms return=(Some(27), Yes)
       5ms initial_result=Yes, result=Ambig
       5ms changed provisional results, i=1, result=Ambig
     reevaluate cycle rev_stack=[(6, GoalInfo { input: B, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (4, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) })], provisional_result=Ambig
       reevaluate_canonical_goal input=B, step_kind_from_parent=Inductive
         evaluate_goal input=B, step_kind_from_parent=Inductive
           encountered cycle with depth 1, path_kind=ForcedAmbiguity
           return=(Some(38), Ambig)
         goal did not change, input=B, result=Ambig
     reevaluate cycle rev_stack=[(9, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(2) }), (4, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) })], provisional_result=Ambig
       reevaluate_canonical_goal input=B, step_kind_from_parent=ForcedAmbiguity
         evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
           encountered cycle with depth 1, path_kind=ForcedAmbiguity
           return=(Some(39), Ambig)
         goal did not change, input=B, result=Ambig
     reevaluate cycle rev_stack=[(17, GoalInfo { input: B, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (15, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) })], provisional_result=Ambig
       provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 4, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY), 2: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
       provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       reevaluate_canonical_goal input=B, step_kind_from_parent=Inductive
         evaluate_goal input=B, step_kind_from_parent=Inductive
           encountered cycle with depth 1, path_kind=ForcedAmbiguity
           return=(Some(40), Ambig)
         goal did not change, input=B, result=Ambig
     reevaluate cycle rev_stack=[(20, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(2) }), (15, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) })], provisional_result=Ambig
       reevaluate_canonical_goal input=B, step_kind_from_parent=ForcedAmbiguity
         evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
           encountered cycle with depth 1, path_kind=ForcedAmbiguity
           return=(Some(41), Ambig)
         goal did not change, input=B, result=Ambig
     reevaluate cycle rev_stack=[(34, GoalInfo { input: B, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (27, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) })], provisional_result=Ambig
       provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 15, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY), 2: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
       provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       reevaluate_canonical_goal input=B, step_kind_from_parent=Inductive
         evaluate_goal input=B, step_kind_from_parent=Inductive
           encountered cycle with depth 1, path_kind=Coinductive
           return=(Some(42), Ambig)
         goal did change, input=B, result=Ambig
       reevaluate_canonical_goal input=D, step_kind_from_parent=Coinductive
         evaluate_goal input=D, step_kind_from_parent=Coinductive
           candidate i=0
             evaluate_goal input=C, step_kind_from_parent=Inductive
               candidate i=0
                 evaluate_goal input=D, step_kind_from_parent=Coinductive
                   encountered cycle with depth 2, path_kind=Coinductive
                   return=(Some(45), Yes)
                 evaluate_goal input=A, step_kind_from_parent=Inductive
                   encountered cycle with depth 0, path_kind=ForcedAmbiguity
                   return=(Some(46), Ambig)
                 initial_result=Yes, result=Ambig
               candidate i=1
                 initial_result=Ambig, result=Ambig
               candidate i=2
                 evaluate_goal input=C, step_kind_from_parent=Coinductive
                   encountered cycle with depth 3, path_kind=Coinductive
                   return=(Some(47), Yes)
                 evaluate_goal input=D, step_kind_from_parent=Coinductive
                   encountered cycle with depth 2, path_kind=Coinductive
                   return=(Some(48), Yes)
                 evaluate_goal input=C, step_kind_from_parent=Coinductive
                   encountered cycle with depth 3, path_kind=Coinductive
                   return=(Some(49), Yes)
                 initial_result=Yes, result=Yes
               provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 44, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Yes }
               return=(Some(44), Yes)
             evaluate_goal input=B, step_kind_from_parent=Inductive
               encountered cycle with depth 1, path_kind=Coinductive
               return=(Some(50), Ambig)
             initial_result=Yes, result=Ambig
           candidate i=1
             evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
               encountered cycle with depth 2, path_kind=ForcedAmbiguity
               return=(Some(51), Ambig)
             flip child result, result=Ambig
             initial_result=Yes, result=Ambig
           candidate i=2
             evaluate_goal input=A, step_kind_from_parent=Unknown
               encountered cycle with depth 0, path_kind=ForcedAmbiguity
               return=(Some(52), Ambig)
             evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
               encountered cycle with depth 1, path_kind=ForcedAmbiguity
               return=(Some(53), Ambig)
             flip child result, result=Ambig
             initial_result=Yes, result=Ambig
           changed provisional results, i=1, result=Ambig
           reevaluate cycle rev_stack=[(45, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(2) }), (44, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) })], provisional_result=Ambig
             reevaluate_canonical_goal input=D, step_kind_from_parent=Coinductive
               evaluate_goal input=D, step_kind_from_parent=Coinductive
                 encountered cycle with depth 2, path_kind=Coinductive
                 return=(Some(54), Ambig)
               goal did change, input=D, result=Ambig
             reevaluate_canonical_goal input=C, step_kind_from_parent=Inductive
               evaluate_goal input=C, step_kind_from_parent=Inductive
                 candidate i=0
                   evaluate_goal input=D, step_kind_from_parent=Coinductive
                     encountered cycle with depth 2, path_kind=Coinductive
                     return=(Some(56), Ambig)
                   evaluate_goal input=A, step_kind_from_parent=Inductive
                     encountered cycle with depth 0, path_kind=ForcedAmbiguity
                     return=(Some(57), Ambig)
                   initial_result=Yes, result=Ambig
                 candidate i=1
                   initial_result=Ambig, result=Ambig
                 candidate i=2
                   evaluate_goal input=C, step_kind_from_parent=Coinductive
                     encountered cycle with depth 3, path_kind=Coinductive
                     return=(Some(58), Yes)
                   evaluate_goal input=D, step_kind_from_parent=Coinductive
                     encountered cycle with depth 2, path_kind=Coinductive
                     return=(Some(59), Ambig)
                   evaluate_goal input=C, step_kind_from_parent=Coinductive
                     encountered cycle with depth 3, path_kind=Coinductive
                     return=(Some(60), Yes)
                   initial_result=Yes, result=Ambig
                 changed provisional results, i=1, result=Ambig
                 reevaluate cycle rev_stack=[(58, GoalInfo { input: C, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(2) })], provisional_result=Ambig
                   reevaluate_canonical_goal input=C, step_kind_from_parent=Coinductive
                     evaluate_goal input=C, step_kind_from_parent=Coinductive
                       encountered cycle with depth 3, path_kind=Coinductive
                       return=(Some(61), Ambig)
                     goal did change, input=C, result=Ambig
                   reevaluating goal itself
                   candidate i=0
                     evaluate_goal input=D, step_kind_from_parent=Coinductive
                       encountered cycle with depth 2, path_kind=Coinductive
                       return=(Some(62), Ambig)
                     evaluate_goal input=A, step_kind_from_parent=Inductive
                       encountered cycle with depth 0, path_kind=ForcedAmbiguity
                       return=(Some(63), Ambig)
                     initial_result=Yes, result=Ambig
                   candidate i=1
                     initial_result=Ambig, result=Ambig
                   candidate i=2
                     evaluate_goal input=C, step_kind_from_parent=Coinductive
                       encountered cycle with depth 3, path_kind=Coinductive
                       return=(Some(64), Ambig)
                     evaluate_goal input=D, step_kind_from_parent=Coinductive
                       encountered cycle with depth 2, path_kind=Coinductive
                       return=(Some(65), Ambig)
                     evaluate_goal input=C, step_kind_from_parent=Coinductive
                       encountered cycle with depth 3, path_kind=Coinductive
                       return=(Some(66), Ambig)
                     initial_result=Yes, result=Ambig
                 provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 55, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Ambig }
                 return=(Some(55), Ambig)
               goal did change, input=C, result=Ambig
             reevaluating goal itself
             candidate i=0
               evaluate_goal input=C, step_kind_from_parent=Inductive
                 provisional cache hit, head=2, path_from_head=Inductive
                 return=(Some(67), Ambig)
               evaluate_goal input=B, step_kind_from_parent=Inductive
                 encountered cycle with depth 1, path_kind=Coinductive
                 return=(Some(68), Ambig)
               initial_result=Yes, result=Ambig
             candidate i=1
               evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
                 encountered cycle with depth 2, path_kind=ForcedAmbiguity
                 return=(Some(69), Ambig)
               flip child result, result=Ambig
               initial_result=Yes, result=Ambig
             candidate i=2
               evaluate_goal input=A, step_kind_from_parent=Unknown
                 encountered cycle with depth 0, path_kind=ForcedAmbiguity
                 return=(Some(70), Ambig)
               evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
                 encountered cycle with depth 1, path_kind=ForcedAmbiguity
                 return=(Some(71), Ambig)
               flip child result, result=Ambig
               initial_result=Yes, result=Ambig
           rebased entry, input=C, entry=ProvisionalCacheEntry { entry_node_id: 55, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Ambig }
           provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 43, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Ambig }
           return=(Some(43), Ambig)
         goal did change, input=D, result=Ambig
       reevaluating goal itself
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(72), Ambig)
       evaluate_goal input=C, step_kind_from_parent=ForcedAmbiguity
         provisional cache hit, head=1, path_from_head=ForcedAmbiguity
         return=(Some(73), Ambig)
       flip child result, result=Ambig
       evaluate_goal input=D, step_kind_from_parent=Coinductive
         provisional cache hit, head=1, path_from_head=Coinductive
         return=(Some(74), Ambig)
       initial_result=Yes, result=Ambig
       6ms rebased entry, input=D, entry=ProvisionalCacheEntry { entry_node_id: 43, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       6ms rebased entry, input=C, entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       6ms rebased entry, input=C, entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       6ms rebased entry, input=C, entry=ProvisionalCacheEntry { entry_node_id: 55, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       6ms provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 1, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       6ms return=(Some(1), Ambig)
     6ms flip child result, result=Ambig
   evaluate_goal input=C, step_kind_from_parent=ForcedAmbiguity
     provisional cache hit, head=0, path_from_head=ForcedAmbiguity
     return=(Some(75), Ambig)
     6ms flip child result, result=Ambig
   evaluate_goal input=A, step_kind_from_parent=Coinductive
     encountered cycle with depth 0, path_kind=Coinductive
     return=(Some(76), Yes)
     6ms initial_result=Ambig, result=Ambig
     6ms changed provisional results, i=1, result=Ambig
   reevaluate cycle rev_stack=[(2, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(77), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(8, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(2) }), (4, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(78), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(10, GoalInfo { input: A, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 4, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY), 2: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Inductive
       evaluate_goal input=A, step_kind_from_parent=Inductive
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(79), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(19, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(2) }), (15, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(80), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(23, GoalInfo { input: A, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (3, GoalInfo { input: C, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 15, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY), 2: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Inductive
       evaluate_goal input=A, step_kind_from_parent=Inductive
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(81), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(30, GoalInfo { input: A, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (28, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (27, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 3, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE), 1: PathsToNested(COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Inductive
       evaluate_goal input=A, step_kind_from_parent=Inductive
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(82), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(36, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(3) }), (27, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 28, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Yes }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(83), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(46, GoalInfo { input: A, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (44, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (43, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     rebased entry, input=C, entry=ProvisionalCacheEntry { entry_node_id: 28, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE)} }, path_from_head: ForcedAmbiguity, result: Yes }
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 27, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN | FORCED_AMBIGUITY), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Yes }
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 1, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Inductive
       evaluate_goal input=A, step_kind_from_parent=Inductive
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(84), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(52, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(3) }), (43, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 44, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Yes }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(85), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(57, GoalInfo { input: A, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (55, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (43, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 43, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Inductive
       evaluate_goal input=A, step_kind_from_parent=Inductive
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(86), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(63, GoalInfo { input: A, step_kind_from_parent: Inductive, available_depth: AvailableDepth(2) }), (55, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (43, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 55, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Inductive
       evaluate_goal input=A, step_kind_from_parent=Inductive
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(87), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(70, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(3) }), (43, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 55, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE), 2: PathsToNested(COINDUCTIVE)} }, path_from_head: Inductive, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(88), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(72, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 43, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN), 1: PathsToNested(INDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: Coinductive, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(89), Ambig)
       goal did not change, input=A, result=Ambig
   reevaluate cycle rev_stack=[(76, GoalInfo { input: A, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(5) })], provisional_result=Ambig
     provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 1, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN | COINDUCTIVE | FORCED_AMBIGUITY)} }, path_from_head: ForcedAmbiguity, result: Ambig }
     reevaluate_canonical_goal input=A, step_kind_from_parent=Coinductive
       evaluate_goal input=A, step_kind_from_parent=Coinductive
         encountered cycle with depth 0, path_kind=Coinductive
         return=(Some(90), Ambig)
       goal did change, input=A, result=Ambig
     reevaluating goal itself
     evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
       provisional cache hit, head=0, path_from_head=ForcedAmbiguity
       return=(Some(91), Ambig)
     flip child result, result=Ambig
     evaluate_goal input=C, step_kind_from_parent=ForcedAmbiguity
       provisional cache hit, head=0, path_from_head=ForcedAmbiguity
       return=(Some(92), Yes)
     flip child result, result=Error
     initial_result=Ambig, result=Error
     7ms changed provisional results, i=2, result=Error
   reevaluate cycle rev_stack=[(77, GoalInfo { input: A, step_kind_from_parent: Unknown, available_depth: AvailableDepth(4) }), (1, GoalInfo { input: B, step_kind_from_parent: ForcedAmbiguity, available_depth: AvailableDepth(5) })], provisional_result=Error
     reevaluate_canonical_goal input=A, step_kind_from_parent=Unknown
       evaluate_goal input=A, step_kind_from_parent=Unknown
         encountered cycle with depth 0, path_kind=ForcedAmbiguity
         return=(Some(93), Error)
       goal did change, input=A, result=Error
     reevaluate_canonical_goal input=B, step_kind_from_parent=ForcedAmbiguity
       evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
         evaluate_goal input=A, step_kind_from_parent=Unknown
           encountered cycle with depth 0, path_kind=ForcedAmbiguity
           return=(Some(95), Error)
         initial_result=Yes, result=Error
         provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 94, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN)} }, path_from_head: ForcedAmbiguity, result: Error }
         return=(Some(94), Error)
       goal did change, input=B, result=Error
     reevaluating goal itself
     evaluate_goal input=B, step_kind_from_parent=ForcedAmbiguity
       provisional cache hit, head=0, path_from_head=ForcedAmbiguity
       return=(Some(96), Error)
     flip child result, result=Yes
     evaluate_goal input=C, step_kind_from_parent=ForcedAmbiguity
       candidate i=0
         evaluate_goal input=D, step_kind_from_parent=Coinductive
           candidate i=0
             evaluate_goal input=C, step_kind_from_parent=Inductive
               encountered cycle with depth 1, path_kind=Coinductive
               return=(Some(99), Yes)
             evaluate_goal input=B, step_kind_from_parent=Inductive
               provisional cache hit, head=0, path_from_head=ForcedAmbiguity
               return=(Some(100), Error)
             initial_result=Yes, result=Error
           candidate i=1
             evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
               encountered cycle with depth 2, path_kind=ForcedAmbiguity
               return=(Some(101), Ambig)
             flip child result, result=Ambig
             initial_result=Yes, result=Ambig
           candidate i=2
             evaluate_goal input=A, step_kind_from_parent=Unknown
               encountered cycle with depth 0, path_kind=ForcedAmbiguity
               return=(Some(102), Error)
             initial_result=Yes, result=Error
           provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 98, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
           return=(Some(98), Ambig)
         evaluate_goal input=A, step_kind_from_parent=Inductive
           encountered cycle with depth 0, path_kind=ForcedAmbiguity
           return=(Some(103), Error)
         initial_result=Yes, result=Error
       candidate i=1
         initial_result=Ambig, result=Ambig
       candidate i=2
         evaluate_goal input=C, step_kind_from_parent=Coinductive
           encountered cycle with depth 1, path_kind=Coinductive
           return=(Some(104), Yes)
         evaluate_goal input=D, step_kind_from_parent=Coinductive
           provisional cache hit, head=1, path_from_head=Coinductive
           return=(Some(105), Ambig)
         evaluate_goal input=C, step_kind_from_parent=Coinductive
           encountered cycle with depth 1, path_kind=Coinductive
           return=(Some(106), Yes)
         initial_result=Yes, result=Ambig
       changed provisional results, i=1, result=Ambig
       reevaluate cycle rev_stack=[(99, GoalInfo { input: C, step_kind_from_parent: Inductive, available_depth: AvailableDepth(3) }), (98, GoalInfo { input: D, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) })], provisional_result=Ambig
         reevaluate_canonical_goal input=C, step_kind_from_parent=Inductive
           evaluate_goal input=C, step_kind_from_parent=Inductive
             encountered cycle with depth 1, path_kind=Coinductive
             return=(Some(107), Ambig)
           goal did change, input=C, result=Ambig
         reevaluate_canonical_goal input=D, step_kind_from_parent=Coinductive
           evaluate_goal input=D, step_kind_from_parent=Coinductive
             candidate i=0
               evaluate_goal input=C, step_kind_from_parent=Inductive
                 encountered cycle with depth 1, path_kind=Coinductive
                 return=(Some(109), Ambig)
               evaluate_goal input=B, step_kind_from_parent=Inductive
                 provisional cache hit, head=0, path_from_head=ForcedAmbiguity
                 return=(Some(110), Error)
               initial_result=Yes, result=Error
             candidate i=1
               evaluate_goal input=D, step_kind_from_parent=ForcedAmbiguity
                 encountered cycle with depth 2, path_kind=ForcedAmbiguity
                 return=(Some(111), Ambig)
               flip child result, result=Ambig
               initial_result=Yes, result=Ambig
             candidate i=2
               evaluate_goal input=A, step_kind_from_parent=Unknown
                 encountered cycle with depth 0, path_kind=ForcedAmbiguity
                 return=(Some(112), Error)
               initial_result=Yes, result=Error
             provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 108, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(UNKNOWN), 1: PathsToNested(INDUCTIVE)} }, path_from_head: Coinductive, result: Ambig }
             return=(Some(108), Ambig)
           goal did not change, input=D, result=Ambig
       reevaluate cycle rev_stack=[(104, GoalInfo { input: C, step_kind_from_parent: Coinductive, available_depth: AvailableDepth(4) })], provisional_result=Ambig
         reevaluate_canonical_goal input=C, step_kind_from_parent=Coinductive
           evaluate_goal input=C, step_kind_from_parent=Coinductive
             encountered cycle with depth 1, path_kind=Coinductive
             return=(Some(113), Ambig)
           goal did change, input=C, result=Ambig
         reevaluating goal itself
         candidate i=0
           evaluate_goal input=D, step_kind_from_parent=Coinductive
             provisional cache hit, head=1, path_from_head=Coinductive
             return=(Some(114), Ambig)
           evaluate_goal input=A, step_kind_from_parent=Inductive
             encountered cycle with depth 0, path_kind=ForcedAmbiguity
             return=(Some(115), Error)
           initial_result=Yes, result=Error
         candidate i=1
           initial_result=Ambig, result=Ambig
         candidate i=2
           evaluate_goal input=C, step_kind_from_parent=Coinductive
             encountered cycle with depth 1, path_kind=Coinductive
             return=(Some(116), Ambig)
           evaluate_goal input=D, step_kind_from_parent=Coinductive
             provisional cache hit, head=1, path_from_head=Coinductive
             return=(Some(117), Ambig)
           evaluate_goal input=C, step_kind_from_parent=Coinductive
             encountered cycle with depth 1, path_kind=Coinductive
             return=(Some(118), Ambig)
           initial_result=Yes, result=Ambig
       rebased entry, input=D, entry=ProvisionalCacheEntry { entry_node_id: 108, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | UNKNOWN | COINDUCTIVE)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       provisional_cache_entry=ProvisionalCacheEntry { entry_node_id: 97, encountered_overflow: false, heads: CycleHeads { heads: {0: PathsToNested(INDUCTIVE | COINDUCTIVE)} }, path_from_head: ForcedAmbiguity, result: Ambig }
       return=(Some(97), Ambig)
     flip child result, result=Ambig
     evaluate_goal input=A, step_kind_from_parent=Coinductive
       encountered cycle with depth 0, path_kind=Coinductive
       return=(Some(119), Error)
     initial_result=Ambig, result=Error
     8ms insert global cache, evaluation_result=EvaluationResult { node_id: 0, encountered_overflow: false, required_depth: 4, heads: CycleHeads { heads: {} }, nested_goals: NestedGoals { nested_goals: {A: PathsToNested(EMPTY | COINDUCTIVE | FORCED_AMBIGUITY), D: PathsToNested(FORCED_AMBIGUITY), B: PathsToNested(FORCED_AMBIGUITY), C: PathsToNested(FORCED_AMBIGUITY)} }, result: Error }
     8ms return=(None, Error)